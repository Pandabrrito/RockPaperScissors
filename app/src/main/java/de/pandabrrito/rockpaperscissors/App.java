/*
 * This source file was generated by the Gradle 'init' task
 */
package de.pandabrrito.rockpaperscissors;

import java.util.Scanner;

import de.pandabrrito.rockpaperscissors.data.Computer;
import de.pandabrrito.rockpaperscissors.data.Player;
import de.pandabrrito.rockpaperscissors.data.User;

import static de.pandabrrito.rockpaperscissors.util.NumberValidator.numberValidator;

public class App {

    public static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        boolean runGame = true;

        while(runGame) {
            Player player1;
            Player player2;

            System.out.println("Welcome to Rock, Paper, Scissors!");
            System.out.println("Choose amount of lives!");

            int chosenLife = numberValidator(0, 99);

            int availableMoves = getModeAndMoves();

            System.out.println("Please enter your name:");
            player1 = new User(scanner.nextLine(), chosenLife);

            System.out.println("Please choose your opponent:");
            System.out.println("1 - Computer");
            System.out.println("2 - Another Player");

            if (numberValidator(1, 2) == 1) {
                player2 = new Computer(chosenLife);
                System.out.println("You chose Computer as your opponent!");
            } else {
                System.out.println("Please enter the name of the second player:");
                player2 = new User(scanner.nextLine(), chosenLife);
                System.out.println("You chose " + player2.getName() + " as your opponent!");
            }

            GameWatcher GameWatcher = new GameWatcher(player1, player2, availableMoves);

            while (!GameWatcher.isGameDone()) {
                GameWatcher.runRound();
                if (!GameWatcher.isGameDone()) {
                    System.out.println("Press any key to continue to the next round...");
                    scanner.nextLine();
                }
            }

            GameWatcher.finalResults();

            System.out.println("\nWant to play again? (y/n)");
            String answer = scanner.nextLine().toLowerCase();
            if (answer.equals("n") || answer.equals("no")) {
                runGame = false;
                System.out.println("Thanks for playing! Goodbye!");
            }
        }

    }

    private static int getModeAndMoves() {
        System.out.println("Choose game mode:");
        System.out.println("1 - Classic");
        System.out.println("2 - RPS-7");
        System.out.println("3 - RPS-9");
        System.out.println("4 - RPS-11");
        System.out.println("5 - RPS-15");
        System.out.println("6 - RPS-25");
        System.out.println("7 - RPS-101");

        int availableMoves = 0;
        switch (numberValidator(1, 7)) {
            case 1 -> {
                availableMoves = 3;
                System.out.println("You chose Classic!");
            }
            case 2 -> {
                availableMoves = 7;
                System.out.println("You chose RPS-7!");
            }
            case 3 -> {
                availableMoves = 9;
                System.out.println("You chose RPS-9!");
            }
            case 4 -> {
                availableMoves = 11;
                System.out.println("You chose RPS-11");
            }
            case 5 -> {
                availableMoves = 15;
                System.out.println("You chose RPS-15");
            }
            case 6 -> {
                availableMoves = 25;
                System.out.println("You chose RPS-25");
            }
            case 7 -> {
                availableMoves = 101;
                System.out.println("You chose RPS-101");
            }
        }
        return availableMoves;
    }
}
